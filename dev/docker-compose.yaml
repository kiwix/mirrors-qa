services:
  postgresdb:
    image: postgres:16.3-bookworm
    container_name: mirrors-qa-postgresdb
    volumes:
      - pg-data-mirrors-qa:/var/lib/postgresql/data
      - ./postgres-initdb:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=mirrors_qa
      - POSTGRES_USER=mirrors_qa
      - POSTGRES_PASSWORD=mirrors_qa
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "dbname=mirrors_qa user=mirrors_qa"]
      interval: 10s
      timeout: 5s
      retries: 3
  backend:
    depends_on:
      postgresdb:
        condition: service_healthy
    build:
      context: ../backend
    container_name: mirrors-qa-backend
    environment:
      POSTGRES_URI: postgresql+psycopg://mirrors_qa:mirrors_qa@postgresdb:5432/mirrors_qa
      JWT_SECRET: DH8kSxcflUVfNRdkEiJJCn2dOOKI3qfw
      DEBUG: true
      REQUESTS_TIMEOUT_DURATION: 30s
    ports:
      - 8000:80
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/tests?page_size=1"]
      interval: 20s
      timeout: 5s
      retries: 3
  scheduler:
    depends_on:
      postgresdb:
        condition: service_healthy
    build:
      context: ../backend
    container_name: mirrors-qa-scheduler
    environment:
      POSTGRES_URI: postgresql+psycopg://mirrors_qa:mirrors_qa@postgresdb:5432/mirrors_qa
      IDLE_WORKER_DURATION: 1d
      SCHEDULER_SLEEP_DURATION: 1m
      EXPIRE_TEST_DURATION: 2m
      DEBUG: true
    command: mirrors-qa-backend scheduler
  worker-manager:
    build:
      context: ../worker/manager
    depends_on:
      backend:
        condition: service_healthy
      task-worker:
        condition: service_started
    profiles:
      - worker
    container_name: mirrors-qa-manager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /lib/modules:/lib/modules
      - ./data:/data
      - ./id_rsa:/etc/ssh/keys/id_rsa
    environment:
      - BACKEND_API_URI=http://backend
      - SLEEP_DURATION=5m
      - TASK_WORKER_IMAGE=mirrors-qa-task-worker
    command: mirrors-qa-manager --verbose ${WORKER_ID}
  task-worker:
    build:
      context: ../worker/task
    image: mirrors-qa-task-worker
    profiles:
      - worker
    command: ["mirrors-qa-task", "--help"]

volumes:
  pg-data-mirrors-qa:
