name: QA

on:
  pull_request:
  push:
    branches:
      - main

jobs:

  paths-filter:
    runs-on: ubuntu-22.04

    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      worker: ${{ steps.filter.outputs.worker }}

    steps:
    - uses: actions/checkout@v4

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          worker:
            - 'worker/**'

  backend:
    name: Backend QA
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.backend == 'true'
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: backend/pyproject.toml
          architecture: x64

      - name: Install dependencies (and project)
        working-directory: backend
        run: |
          pip install -U pip
          pip install -e .[lint,scripts,test,check]

      - name: Check black formatting
        working-directory: backend
        run: inv lint-black

      - name: Check ruff
        working-directory: backend
        run: inv lint-ruff

      - name: Check pyright
        working-directory: backend
        run: inv check-pyright

  worker:
    name: Worker QA
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.worker == 'true'
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: worker/pyproject.toml
          architecture: x64

      - name: Install dependencies (and project)
        working-directory: worker
        run: |
          pip install -U pip
          pip install -e .[lint,scripts,test,check]

      - name: Check black formatting
        working-directory: worker
        run: inv lint-black

      - name: Check ruff
        working-directory: worker
        run: inv lint-ruff

      - name: Check pyright
        working-directory: worker
        run: inv check-pyright
