name: Publish Docker image

on:
  push:
    branches:
      - 'main'

jobs:

  paths-filter:
    runs-on: ubuntu-22.04

    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      task_worker: ${{ steps.filter.outputs.task_worker }}
      worker_manager: ${{ steps.filter.outputs.worker_manager }}

    steps:
    - uses: actions/checkout@v4

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          task_worker:
            - 'worker/**'
          worker_manager:
            - 'worker/**'

  backend:
    name: Backend build
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.backend == 'true'
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/mirrors-qa-backend
          tag-pattern: /^v([0-9.]+)$/
          latest-on-tag: true
          restrict-to: openzim/mirrors-qa
          context: backend
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}
          repo_description: auto
          repo_overview: auto

  worker-manager:
    name: Worker manager build
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.worker_manager == 'true'
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/mirrors-qa-worker-manager
          latest-on-tag: true
          tag-pattern: /^v([0-9.]+)$/
          restrict-to: openzim/mirrors-qa
          context: worker
          dockerfile: manager.Dockerfile
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}
          repo_description: auto
          repo_overview: auto

  task-worker:
    name: Task worker build
    runs-on: ubuntu-22.04
    needs: paths-filter
    if: needs.paths-filter.outputs.task_worker == 'true'
    steps:
      - name: Retrieve source code
        uses: actions/checkout@v4

      - name: Build and publish Docker Image
        uses: openzim/docker-publish-action@v10
        with:
          image-name: openzim/mirrors-qa-task-worker
          latest-on-tag: true
          tag-pattern: /^v([0-9.]+)$/
          restrict-to: openzim/mirrors-qa
          context: worker
          dockerfile: task.Dockerfile
          registries: ghcr.io
          credentials:
            GHCRIO_USERNAME=${{ secrets.GHCR_USERNAME }}
            GHCRIO_TOKEN=${{ secrets.GHCR_TOKEN }}
          repo_description: auto
          repo_overview: auto
